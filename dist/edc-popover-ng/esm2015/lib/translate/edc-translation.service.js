import { HelpService } from '../help.service';
import { SYS_LANG } from './language-codes';
import { Injectable } from '@angular/core';
import { DEFAULT_LABELS } from './default-translations';
export class EdcTranslationService {
    constructor(helpService) {
        this.helpService = helpService;
        this.defaultLanguage = SYS_LANG;
        this.lang = SYS_LANG;
    }
    getLang() {
        return this.lang;
    }
    setLang(lang) {
        this.lang = lang;
    }
    getTranslation(lang = this.lang) {
        const langToUse = this.helpService.isLanguagePresent(lang) ? lang : this.defaultLanguage;
        return this.helpService.getPopoverTranslation(langToUse)
            .catch(() => this.loadDefaultLabels(lang));
    }
    /**
     * Load default popover labels on error
     *
     * @param lang the lang code
     * @param defaultLanguage default lang code
     */
    loadDefaultLabels(lang, defaultLanguage = this.defaultLanguage) {
        const labelTranslation = DEFAULT_LABELS.get(lang) || DEFAULT_LABELS.get(this.defaultLanguage)
            || DEFAULT_LABELS.get(SYS_LANG);
        return Promise.resolve(labelTranslation);
    }
}
EdcTranslationService.decorators = [
    { type: Injectable }
];
EdcTranslationService.ctorParameters = () => [
    { type: HelpService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRjLXRyYW5zbGF0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9lZGMtcG9wb3Zlci1uZy9zcmMvbGliL3RyYW5zbGF0ZS9lZGMtdHJhbnNsYXRpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBSXhELE1BQU0sT0FBTyxxQkFBcUI7SUFLaEMsWUFBNkIsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFIckQsb0JBQWUsR0FBRyxRQUFRLENBQUM7UUFDM0IsU0FBSSxHQUFHLFFBQVEsQ0FBQztJQUdoQixDQUFDO0lBRUQsT0FBTztRQUNMLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDO0lBRUQsT0FBTyxDQUFDLElBQVk7UUFDbEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztJQUVELGNBQWMsQ0FBQyxPQUFlLElBQUksQ0FBQyxJQUFJO1FBQ3JDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUN6RixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMscUJBQXFCLENBQUMsU0FBUyxDQUFDO2FBQ3JELEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxpQkFBaUIsQ0FBQyxJQUFZLEVBQUUsa0JBQTBCLElBQUksQ0FBQyxlQUFlO1FBQzVFLE1BQU0sZ0JBQWdCLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxjQUFjLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7ZUFDMUYsY0FBYyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVoQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUMzQyxDQUFDOzs7WUFsQ0YsVUFBVTs7O1lBTkYsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlbHBTZXJ2aWNlIH0gZnJvbSAnLi4vaGVscC5zZXJ2aWNlJztcbmltcG9ydCB7IFNZU19MQU5HIH0gZnJvbSAnLi9sYW5ndWFnZS1jb2Rlcyc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBERUZBVUxUX0xBQkVMUyB9IGZyb20gJy4vZGVmYXVsdC10cmFuc2xhdGlvbnMnO1xuaW1wb3J0IHsgUG9wb3ZlckxhYmVsIH0gZnJvbSAnZWRjLWNsaWVudC1qcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBFZGNUcmFuc2xhdGlvblNlcnZpY2Uge1xuXG4gIGRlZmF1bHRMYW5ndWFnZSA9IFNZU19MQU5HO1xuICBsYW5nID0gU1lTX0xBTkc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBoZWxwU2VydmljZTogSGVscFNlcnZpY2UpIHtcbiAgfVxuXG4gIGdldExhbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5sYW5nO1xuICB9XG5cbiAgc2V0TGFuZyhsYW5nOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmxhbmcgPSBsYW5nO1xuICB9XG5cbiAgZ2V0VHJhbnNsYXRpb24obGFuZzogc3RyaW5nID0gdGhpcy5sYW5nKTogUHJvbWlzZTxQb3BvdmVyTGFiZWw+IHtcbiAgICBjb25zdCBsYW5nVG9Vc2UgPSB0aGlzLmhlbHBTZXJ2aWNlLmlzTGFuZ3VhZ2VQcmVzZW50KGxhbmcpID8gbGFuZyA6IHRoaXMuZGVmYXVsdExhbmd1YWdlO1xuICAgIHJldHVybiB0aGlzLmhlbHBTZXJ2aWNlLmdldFBvcG92ZXJUcmFuc2xhdGlvbihsYW5nVG9Vc2UpXG4gICAgICAuY2F0Y2goKCkgPT4gdGhpcy5sb2FkRGVmYXVsdExhYmVscyhsYW5nKSk7XG4gIH1cblxuICAvKipcbiAgICogTG9hZCBkZWZhdWx0IHBvcG92ZXIgbGFiZWxzIG9uIGVycm9yXG4gICAqXG4gICAqIEBwYXJhbSBsYW5nIHRoZSBsYW5nIGNvZGVcbiAgICogQHBhcmFtIGRlZmF1bHRMYW5ndWFnZSBkZWZhdWx0IGxhbmcgY29kZVxuICAgKi9cbiAgbG9hZERlZmF1bHRMYWJlbHMobGFuZzogc3RyaW5nLCBkZWZhdWx0TGFuZ3VhZ2U6IHN0cmluZyA9IHRoaXMuZGVmYXVsdExhbmd1YWdlKTogUHJvbWlzZTxQb3BvdmVyTGFiZWw+IHtcbiAgICBjb25zdCBsYWJlbFRyYW5zbGF0aW9uID0gREVGQVVMVF9MQUJFTFMuZ2V0KGxhbmcpIHx8IERFRkFVTFRfTEFCRUxTLmdldCh0aGlzLmRlZmF1bHRMYW5ndWFnZSlcbiAgICB8fCBERUZBVUxUX0xBQkVMUy5nZXQoU1lTX0xBTkcpO1xuXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShsYWJlbFRyYW5zbGF0aW9uKTtcbiAgfVxufVxuIl19