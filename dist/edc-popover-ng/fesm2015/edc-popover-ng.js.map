{"version":3,"file":"edc-popover-ng.js","sources":["../../../projects/edc-popover-ng/src/lib/config/popover-configuration-handler.ts","../../../projects/edc-popover-ng/src/lib/translate/language-codes.ts","../../../projects/edc-popover-ng/src/lib/help.service.ts","../../../projects/edc-popover-ng/src/lib/translate/default-translations.ts","../../../projects/edc-popover-ng/src/lib/translate/edc-translation.service.ts","../../../projects/edc-popover-ng/src/lib/config/help-config.service.ts","../../../projects/edc-popover-ng/src/lib/help.component.ts","../../../projects/edc-popover-ng/src/lib/help-popover.directive.ts","../../../projects/edc-popover-ng/src/lib/help.module.ts","../../../projects/edc-popover-ng/src/public_api.ts","../../../projects/edc-popover-ng/src/edc-popover-ng.ts"],"sourcesContent":["export abstract class PopoverConfigurationHandler {\n\n  abstract getPluginId(): string;\n\n  abstract getHelpPath(): string;\n\n  abstract getDocPath(): string;\n\n  abstract getIcon(): string;\n\n  abstract isAppendToBody(): boolean;\n\n  abstract getI18nPath(): string;\n\n}\n","export const LANGUAGE_CODES = [\n  'en', // English\n  'ar', // Arabic\n  'bg', // Bulgarian\n  'zh', // Chinese\n  'hr', // Croatian\n  'cs', // Czech\n  'da', // Danish\n  'nl', // Dutch\n  'et', // Estonian\n  'fi', // Finnish\n  'fr', // French\n  'de', // German\n  'el', // Greek\n  'he', // Hebrew\n  'hu', // Hungarian\n  'is', // Icelandic\n  'ga', // Irish\n  'it', // Italian\n  'ja', // Japanese\n  'ko', // Korean\n  'lv', // Latvian\n  'lt', // Lithuanian\n  'lb', // Luxembourgish\n  'mt', // Maltese\n  'no', // Norwegian\n  'fa', // Persian\n  'pl', // Polish\n  'pt', // Portuguese\n  'ro', // Romanian\n  'ru', // Russian\n  'sk', // Slovak\n  'sl', // Slovenian\n  'es', // Spanish\n  'sv', // Swedish\n  'tr', // Turkish\n  'vi', // Vietnamese\n];\n\n// Languages with translation contents\nexport const DEFINED_TRANSLATION_CODES = [\n  'en',\n  'fr'\n];\n\nexport const SYS_LANG = 'en';\n","import { Injectable } from '@angular/core';\nimport { EdcClient, Helper, PopoverLabel } from 'edc-client-js';\nimport { PopoverConfigurationHandler } from './config/popover-configuration-handler';\nimport { SYS_LANG } from './translate/language-codes';\n\n@Injectable()\nexport class HelpService {\n\n  private readonly edcClient: EdcClient;\n\n  constructor(private configurationHandler: PopoverConfigurationHandler) {\n    this.edcClient = new EdcClient(configurationHandler.getDocPath(),\n      configurationHandler.getHelpPath(),\n      configurationHandler.getPluginId(),\n      true, // Context only, don't load the whole doc\n      configurationHandler.getI18nPath()\n    );\n  }\n\n  getHelp(primaryKey: string, subKey: string, pluginId?: string, lang?: string): Promise<Helper> {\n    const pluginIdentifier = pluginId || this.configurationHandler.getPluginId();\n    return this.edcClient.getHelper(primaryKey, subKey, pluginIdentifier, lang);\n  }\n\n  getContextUrl(mainKey: string, subKey: string, languageCode: string, articleIndex: number, pluginId?: string): string {\n    return this.edcClient.getContextWebHelpUrl(mainKey, subKey, languageCode, articleIndex, pluginId);\n  }\n\n  getDocumentationUrl(docId: number): string {\n    return this.edcClient.getDocumentationWebHelpUrl(docId);\n  }\n\n  getI18nUrl(): string {\n    return this.edcClient.getPopoverI18nUrl();\n  }\n\n  getPluginId(): string {\n    return this.configurationHandler.getPluginId();\n  }\n\n  getIcon(): string {\n    return this.configurationHandler.getIcon() || 'fa-question-circle-o';\n  }\n\n  getContainer(): string {\n    return this.configurationHandler.isAppendToBody() ? 'body' : '';\n  }\n\n  getDefaultLanguage(): string {\n    return (this.edcClient && this.edcClient.getDefaultLanguage && this.edcClient.getDefaultLanguage()) || SYS_LANG;\n  }\n\n  isLanguagePresent(langCode: string): boolean {\n    return this.edcClient.isLanguagePresent(langCode);\n  }\n\n  getPopoverTranslation(langCode: string): Promise<PopoverLabel> {\n    return this.edcClient.getPopoverLabels(langCode);\n  }\n}\n","import { PopoverLabel } from 'edc-client-js';\n\nconst LABELS_EN: PopoverLabel = {\n  articles: 'Need more...',\n  links: 'Related topics',\n  iconAlt: 'Help',\n  comingSoon: 'Contextual help is coming soon.',\n  errors: {\n    failedData: 'An error occurred when fetching data !\\\\nCheck the brick keys provided to the EdcHelp component.'\n  },\n  content: null,\n  url: '',\n  exportId: ''\n};\nconst LABELS_FR: PopoverLabel = {\n  articles: 'Plus d\\'info...',\n  links: 'Sujets associés',\n  iconAlt: 'Aide',\n  comingSoon: 'Aide contextuelle à venir.',\n  errors: {\n    failedData: 'Une erreur est survenue lors de la récupération des données !' +\n      '\\\\nVérifiez les clés de la brique fournies au composant EdcHelp.'\n  },\n  content: null,\n  url: '',\n  exportId: ''\n};\n\nexport const DEFAULT_LABELS = new Map<string, PopoverLabel>()\n  .set('en', LABELS_EN)\n  .set('fr', LABELS_FR);\n","import { HelpService } from '../help.service';\nimport { SYS_LANG } from './language-codes';\nimport { Injectable } from '@angular/core';\nimport { DEFAULT_LABELS } from './default-translations';\nimport { PopoverLabel } from 'edc-client-js';\n\n@Injectable()\nexport class EdcTranslationService {\n\n  defaultLanguage = SYS_LANG;\n  lang = SYS_LANG;\n\n  constructor(private readonly helpService: HelpService) {\n  }\n\n  getLang(): string {\n    return this.lang;\n  }\n\n  setLang(lang: string): void {\n    this.lang = lang;\n  }\n\n  getTranslation(lang: string = this.lang): Promise<PopoverLabel> {\n    const langToUse = this.helpService.isLanguagePresent(lang) ? lang : this.defaultLanguage;\n    return this.helpService.getPopoverTranslation(langToUse)\n      .catch(() => this.loadDefaultLabels(lang));\n  }\n\n  /**\n   * Load default popover labels on error\n   *\n   * @param lang the lang code\n   * @param defaultLanguage default lang code\n   */\n  loadDefaultLabels(lang: string, defaultLanguage: string = this.defaultLanguage): Promise<PopoverLabel> {\n    const labelTranslation = DEFAULT_LABELS.get(lang) || DEFAULT_LABELS.get(this.defaultLanguage)\n    || DEFAULT_LABELS.get(SYS_LANG);\n\n    return Promise.resolve(labelTranslation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HelpService } from '../help.service';\nimport { Article, Helper, Link, PopoverLabel } from 'edc-client-js';\nimport { EdcTranslationService } from '../translate/edc-translation.service';\nimport { PopoverConfig, PopoverContent, PopoverOptions } from 'edc-popover-js';\nimport { Placement } from 'tippy.js';\n\n@Injectable()\nexport class HelpConfigService {\n\n  constructor(private readonly helpService: HelpService,\n              private readonly translationService: EdcTranslationService) {\n  }\n\n  buildPopoverConfig(primaryKey: string,\n                     subKey: string,\n                     pluginId?: string,\n                     lang?: string,\n                     placement = 'bottom',\n                     customClass?: string): Promise<void | PopoverConfig> {\n    // Get the helper\n    return this.helpService.getHelp(primaryKey, subKey, pluginId, lang)\n      .then((helper: Helper) => this.addContent(helper, primaryKey, subKey, lang))\n      .then((config: PopoverConfig) => this.addLabels(config))\n      .then((config: PopoverConfig) => this.addOptions(config, placement, customClass))\n      .catch((err: Error) => {\n        console.error(err);\n      });\n  }\n\n  getIcon(): string {\n    return this.helpService.getIcon();\n  }\n\n  updateOptions(config: PopoverConfig, placement: Placement, customClass: string): PopoverConfig {\n    if (!config) {\n      return null;\n    }\n    config.options.placement = placement;\n    config.options.customClass = customClass;\n    return config;\n  }\n\n  private addContent(helper: Helper, primaryKey: string, subKey: string, lang: string): PopoverConfig {\n    const config = new PopoverConfig();\n    if (helper) {\n      const { language: resolvedLanguage } = helper;\n      if (resolvedLanguage !== lang) {\n        console.warn(`Requested language ${lang} could not be loaded,\n           content will be using default language ${helper.language} instead`);\n      }\n      // Set translation language for the labels\n      this.translationService.setLang(resolvedLanguage);\n      const { label: title, description, articles, links } = helper;\n      config.content = Object.assign(new PopoverContent(), {\n        title, description, articles, links\n      });\n      // Parse article and links urls\n      this.parseUrls(config, primaryKey, subKey, resolvedLanguage, helper.exportId);\n    } else {\n      console.error(`Could not load Helper for the key ${primaryKey} and subKey ${subKey}`);\n    }\n    return config;\n  }\n\n  private parseUrls(config: PopoverConfig, primaryKey: string, subKey: string, lang: string, pluginId?: string): void {\n    if (!config || !config.content) {\n      return;\n    }\n    const articles = config.content.articles || [];\n    const links = config.content.links || [];\n    articles.forEach((article: Article, index: number) =>\n      article.url = this.helpService.getContextUrl(primaryKey, subKey, lang, index, pluginId));\n    links.forEach((link: Link) => link.url = this.helpService.getDocumentationUrl(link.id));\n  }\n\n  private addLabels(config: PopoverConfig): Promise<PopoverConfig> {\n    return this.translationService.getTranslation()\n      .then((translations: PopoverLabel) => {\n        config.labels = translations;\n        return config;\n      })\n      .catch(() => config);\n  }\n\n  private addOptions(config: PopoverConfig, placement: string, customClass: string): PopoverConfig {\n    config.options = Object.assign(new PopoverOptions(), { placement, customClass });\n    const container = this.helpService.getContainer();\n    if (container && container !== 'body') {\n      config.options.appendTo = 'parent';\n    } else {\n      config.options.appendTo = () => document.body;\n    }\n    return config;\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Helper } from 'edc-client-js';\nimport { HelpService } from './help.service';\nimport { PopoverConfig } from 'edc-popover-js';\nimport { HelpConfigService } from './config/help-config.service';\nimport { Placement } from 'tippy.js';\n\n@Component({\n  selector: 'edc-help',\n  styleUrls: ['help.less'],\n  template: `\n    <i class=\"fa help-icon\" [ngClass]=\"this.getIconClasses()\" edcHelpPopover [config]=\"config\"></i>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class HelpComponent implements OnInit, OnChanges {\n\n  readonly DEFAULT_PLACEMENT = 'bottom';\n\n  helper: Helper;\n  iconCss: string;\n\n  config: PopoverConfig;\n\n  @Input() pluginId: string; // if defined, the plugin identifier to use for fetching help content\n  @Input() mainKey: string;\n  @Input() subKey: string;\n  @Input() placement: Placement;\n  @Input() dark: boolean;\n  @Input() lang: string;\n  @Input() customClass: string;\n\n  constructor(private readonly helpConfigService: HelpConfigService) {\n  }\n\n  ngOnInit(): void {\n    this.iconCss = this.helpConfigService.getIcon();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // When at least one of the inputs related to content changes, the configuration must be rebuild\n    const contentTriggers = ['pluginId', 'mainKey', 'subKey', 'lang'];\n    // Those only require to update the configuration options attribute\n    const optionsTriggers = ['placement', 'customClass'];\n    if (contentTriggers.some(prop => changes[prop])) {\n      this.buildPopoverConfig();\n    } else if (optionsTriggers.some(prop => changes[prop])) {\n      this.config = this.helpConfigService.updateOptions(this.config, this.placement, this.customClass);\n    }\n  }\n\n  getIconClasses(): string[] {\n    const classes = [];\n    if (this.iconCss) {\n      classes.push(this.iconCss);\n    }\n    // Set dark class\n    if (this.dark) {\n      classes.push('on-dark');\n    }\n    return classes;\n  }\n\n  private buildPopoverConfig(): void {\n    const placement = this.placement || this.DEFAULT_PLACEMENT;\n    this.helpConfigService.buildPopoverConfig(this.mainKey, this.subKey, this.pluginId, this.lang, placement, this.customClass)\n      .then((config: PopoverConfig) => {\n        this.config = config;\n      });\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Popover, PopoverConfig } from 'edc-popover-js';\n\n@Directive({ selector: '[edcHelpPopover]' })\nexport class HelpPopoverDirective implements OnChanges {\n\n  popoverInstance;\n\n  @Input() config: PopoverConfig;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.loadPopover();\n  }\n\n  private loadPopover(): void {\n    if (this.config && this.elementRef && this.elementRef.nativeElement) {\n      this.config.target = this.elementRef.nativeElement;\n      this.popoverInstance = new Popover(this.config);\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HelpComponent } from './help.component';\nimport { HelpService } from './help.service';\nimport { EdcTranslationService } from './translate/edc-translation.service';\nimport { HelpPopoverDirective } from './help-popover.directive';\nimport { HelpConfigService } from './config/help-config.service';\n\nimport 'edc-popover-js/dist/edc-popover.css';\n\nexport interface HelpModuleConfig {\n  configLoader: Provider;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    HelpComponent,\n    HelpPopoverDirective\n  ],\n  providers: [\n    HelpService,\n    EdcTranslationService,\n    HelpConfigService\n  ],\n  exports: [\n    HelpComponent\n  ],\n  entryComponents: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {\n  static forRoot(config: HelpModuleConfig): ModuleWithProviders<HelpModule> {\n    return {\n      ngModule: HelpModule,\n      providers: [\n        HelpService,\n        config.configLoader\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of edc-popover-ng\n */\n\nexport * from './lib/help.component';\nexport * from './lib/help.module';\nexport * from './lib/help.service';\nexport * from './lib/config/popover-configuration';\nexport * from './lib/config/popover-configuration-handler';\nexport * from './lib/translate/language-codes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {HelpConfigService as ɵa} from './lib/config/help-config.service';\nexport {HelpPopoverDirective as ɵc} from './lib/help-popover.directive';\nexport {EdcTranslationService as ɵb} from './lib/translate/edc-translation.service';"],"names":[],"mappings":"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"}