{"version":3,"file":"edc-popover-ng.umd.js","sources":["../../../projects/edc-popover-ng/src/lib/config/popover-configuration-handler.ts","../../../projects/edc-popover-ng/src/lib/translate/language-codes.ts","../../../projects/edc-popover-ng/src/lib/help.service.ts","../../../projects/edc-popover-ng/src/lib/translate/default-translations.ts","../../../projects/edc-popover-ng/src/lib/translate/edc-translation.service.ts","../../../projects/edc-popover-ng/src/lib/config/help-config.service.ts","../../../projects/edc-popover-ng/src/lib/help.component.ts","../../../projects/edc-popover-ng/src/lib/help-popover.directive.ts","../../../projects/edc-popover-ng/src/lib/help.module.ts","../../../projects/edc-popover-ng/src/public_api.ts","../../../projects/edc-popover-ng/src/edc-popover-ng.ts"],"sourcesContent":["export abstract class PopoverConfigurationHandler {\n\n  abstract getPluginId(): string;\n\n  abstract getHelpPath(): string;\n\n  abstract getDocPath(): string;\n\n  abstract getIcon(): string;\n\n  abstract isAppendToBody(): boolean;\n\n  abstract getI18nPath(): string;\n\n}\n","export const LANGUAGE_CODES = [\n  'en', // English\n  'ar', // Arabic\n  'bg', // Bulgarian\n  'zh', // Chinese\n  'hr', // Croatian\n  'cs', // Czech\n  'da', // Danish\n  'nl', // Dutch\n  'et', // Estonian\n  'fi', // Finnish\n  'fr', // French\n  'de', // German\n  'el', // Greek\n  'he', // Hebrew\n  'hu', // Hungarian\n  'is', // Icelandic\n  'ga', // Irish\n  'it', // Italian\n  'ja', // Japanese\n  'ko', // Korean\n  'lv', // Latvian\n  'lt', // Lithuanian\n  'lb', // Luxembourgish\n  'mt', // Maltese\n  'no', // Norwegian\n  'fa', // Persian\n  'pl', // Polish\n  'pt', // Portuguese\n  'ro', // Romanian\n  'ru', // Russian\n  'sk', // Slovak\n  'sl', // Slovenian\n  'es', // Spanish\n  'sv', // Swedish\n  'tr', // Turkish\n  'vi', // Vietnamese\n];\n\n// Languages with translation contents\nexport const DEFINED_TRANSLATION_CODES = [\n  'en',\n  'fr'\n];\n\nexport const SYS_LANG = 'en';\n","import { Injectable } from '@angular/core';\nimport { EdcClient, Helper, PopoverLabel } from 'edc-client-js';\nimport { PopoverConfigurationHandler } from './config/popover-configuration-handler';\nimport { SYS_LANG } from './translate/language-codes';\n\n@Injectable()\nexport class HelpService {\n\n  private readonly edcClient: EdcClient;\n\n  constructor(private configurationHandler: PopoverConfigurationHandler) {\n    this.edcClient = new EdcClient(configurationHandler.getDocPath(),\n      configurationHandler.getHelpPath(),\n      configurationHandler.getPluginId(),\n      true, // Context only, don't load the whole doc\n      configurationHandler.getI18nPath()\n    );\n  }\n\n  getHelp(primaryKey: string, subKey: string, pluginId?: string, lang?: string): Promise<Helper> {\n    const pluginIdentifier = pluginId || this.configurationHandler.getPluginId();\n    return this.edcClient.getHelper(primaryKey, subKey, pluginIdentifier, lang);\n  }\n\n  getContextUrl(mainKey: string, subKey: string, languageCode: string, articleIndex: number, pluginId?: string): string {\n    return this.edcClient.getContextWebHelpUrl(mainKey, subKey, languageCode, articleIndex, pluginId);\n  }\n\n  getDocumentationUrl(docId: number): string {\n    return this.edcClient.getDocumentationWebHelpUrl(docId);\n  }\n\n  getI18nUrl(): string {\n    return this.edcClient.getPopoverI18nUrl();\n  }\n\n  getPluginId(): string {\n    return this.configurationHandler.getPluginId();\n  }\n\n  getIcon(): string {\n    return this.configurationHandler.getIcon() || 'fa-question-circle-o';\n  }\n\n  getContainer(): string {\n    return this.configurationHandler.isAppendToBody() ? 'body' : '';\n  }\n\n  getDefaultLanguage(): string {\n    return (this.edcClient && this.edcClient.getDefaultLanguage && this.edcClient.getDefaultLanguage()) || SYS_LANG;\n  }\n\n  isLanguagePresent(langCode: string): boolean {\n    return this.edcClient.isLanguagePresent(langCode);\n  }\n\n  getPopoverTranslation(langCode: string): Promise<PopoverLabel> {\n    return this.edcClient.getPopoverLabels(langCode);\n  }\n}\n","import { PopoverLabel } from 'edc-client-js';\n\nconst LABELS_EN: PopoverLabel = {\n  articles: 'Need more...',\n  links: 'Related topics',\n  iconAlt: 'Help',\n  comingSoon: 'Contextual help is coming soon.',\n  errors: {\n    failedData: 'An error occurred when fetching data !\\\\nCheck the brick keys provided to the EdcHelp component.'\n  },\n  content: null,\n  url: '',\n  exportId: ''\n};\nconst LABELS_FR: PopoverLabel = {\n  articles: 'Plus d\\'info...',\n  links: 'Sujets associés',\n  iconAlt: 'Aide',\n  comingSoon: 'Aide contextuelle à venir.',\n  errors: {\n    failedData: 'Une erreur est survenue lors de la récupération des données !' +\n      '\\\\nVérifiez les clés de la brique fournies au composant EdcHelp.'\n  },\n  content: null,\n  url: '',\n  exportId: ''\n};\n\nexport const DEFAULT_LABELS = new Map<string, PopoverLabel>()\n  .set('en', LABELS_EN)\n  .set('fr', LABELS_FR);\n","import { HelpService } from '../help.service';\nimport { SYS_LANG } from './language-codes';\nimport { Injectable } from '@angular/core';\nimport { DEFAULT_LABELS } from './default-translations';\nimport { PopoverLabel } from 'edc-client-js';\n\n@Injectable()\nexport class EdcTranslationService {\n\n  defaultLanguage = SYS_LANG;\n  lang = SYS_LANG;\n\n  constructor(private readonly helpService: HelpService) {\n  }\n\n  getLang(): string {\n    return this.lang;\n  }\n\n  setLang(lang: string): void {\n    this.lang = lang;\n  }\n\n  getTranslation(lang: string = this.lang): Promise<PopoverLabel> {\n    const langToUse = this.helpService.isLanguagePresent(lang) ? lang : this.defaultLanguage;\n    return this.helpService.getPopoverTranslation(langToUse)\n      .catch(() => this.loadDefaultLabels(lang));\n  }\n\n  /**\n   * Load default popover labels on error\n   *\n   * @param lang the lang code\n   * @param defaultLanguage default lang code\n   */\n  loadDefaultLabels(lang: string, defaultLanguage: string = this.defaultLanguage): Promise<PopoverLabel> {\n    const labelTranslation = DEFAULT_LABELS.get(lang) || DEFAULT_LABELS.get(this.defaultLanguage)\n    || DEFAULT_LABELS.get(SYS_LANG);\n\n    return Promise.resolve(labelTranslation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HelpService } from '../help.service';\nimport { Article, Helper, Link, PopoverLabel } from 'edc-client-js';\nimport { EdcTranslationService } from '../translate/edc-translation.service';\nimport { PopoverConfig, PopoverContent, PopoverOptions } from 'edc-popover-js';\nimport { Placement } from 'tippy.js';\n\n@Injectable()\nexport class HelpConfigService {\n\n  constructor(private readonly helpService: HelpService,\n              private readonly translationService: EdcTranslationService) {\n  }\n\n  buildPopoverConfig(primaryKey: string,\n                     subKey: string,\n                     pluginId?: string,\n                     lang?: string,\n                     placement = 'bottom',\n                     customClass?: string): Promise<void | PopoverConfig> {\n    // Get the helper\n    return this.helpService.getHelp(primaryKey, subKey, pluginId, lang)\n      .then((helper: Helper) => this.addContent(helper, primaryKey, subKey, lang))\n      .then((config: PopoverConfig) => this.addLabels(config))\n      .then((config: PopoverConfig) => this.addOptions(config, placement, customClass))\n      .catch((err: Error) => {\n        console.error(err);\n      });\n  }\n\n  getIcon(): string {\n    return this.helpService.getIcon();\n  }\n\n  updateOptions(config: PopoverConfig, placement: Placement, customClass: string): PopoverConfig {\n    if (!config) {\n      return null;\n    }\n    config.options.placement = placement;\n    config.options.customClass = customClass;\n    return config;\n  }\n\n  private addContent(helper: Helper, primaryKey: string, subKey: string, lang: string): PopoverConfig {\n    const config = new PopoverConfig();\n    if (helper) {\n      const { language: resolvedLanguage } = helper;\n      if (resolvedLanguage !== lang) {\n        console.warn(`Requested language ${lang} could not be loaded,\n           content will be using default language ${helper.language} instead`);\n      }\n      // Set translation language for the labels\n      this.translationService.setLang(resolvedLanguage);\n      const { label: title, description, articles, links } = helper;\n      config.content = Object.assign(new PopoverContent(), {\n        title, description, articles, links\n      });\n      // Parse article and links urls\n      this.parseUrls(config, primaryKey, subKey, resolvedLanguage, helper.exportId);\n    } else {\n      console.error(`Could not load Helper for the key ${primaryKey} and subKey ${subKey}`);\n    }\n    return config;\n  }\n\n  private parseUrls(config: PopoverConfig, primaryKey: string, subKey: string, lang: string, pluginId?: string): void {\n    if (!config || !config.content) {\n      return;\n    }\n    const articles = config.content.articles || [];\n    const links = config.content.links || [];\n    articles.forEach((article: Article, index: number) =>\n      article.url = this.helpService.getContextUrl(primaryKey, subKey, lang, index, pluginId));\n    links.forEach((link: Link) => link.url = this.helpService.getDocumentationUrl(link.id));\n  }\n\n  private addLabels(config: PopoverConfig): Promise<PopoverConfig> {\n    return this.translationService.getTranslation()\n      .then((translations: PopoverLabel) => {\n        config.labels = translations;\n        return config;\n      })\n      .catch(() => config);\n  }\n\n  private addOptions(config: PopoverConfig, placement: string, customClass: string): PopoverConfig {\n    config.options = Object.assign(new PopoverOptions(), { placement, customClass });\n    const container = this.helpService.getContainer();\n    if (container && container !== 'body') {\n      config.options.appendTo = 'parent';\n    } else {\n      config.options.appendTo = () => document.body;\n    }\n    return config;\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Helper } from 'edc-client-js';\nimport { HelpService } from './help.service';\nimport { PopoverConfig } from 'edc-popover-js';\nimport { HelpConfigService } from './config/help-config.service';\nimport { Placement } from 'tippy.js';\n\n@Component({\n  selector: 'edc-help',\n  styleUrls: ['help.less'],\n  template: `\n    <i class=\"fa help-icon\" [ngClass]=\"this.getIconClasses()\" edcHelpPopover [config]=\"config\"></i>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class HelpComponent implements OnInit, OnChanges {\n\n  readonly DEFAULT_PLACEMENT = 'bottom';\n\n  helper: Helper;\n  iconCss: string;\n\n  config: PopoverConfig;\n\n  @Input() pluginId: string; // if defined, the plugin identifier to use for fetching help content\n  @Input() mainKey: string;\n  @Input() subKey: string;\n  @Input() placement: Placement;\n  @Input() dark: boolean;\n  @Input() lang: string;\n  @Input() customClass: string;\n\n  constructor(private readonly helpConfigService: HelpConfigService) {\n  }\n\n  ngOnInit(): void {\n    this.iconCss = this.helpConfigService.getIcon();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // When at least one of the inputs related to content changes, the configuration must be rebuild\n    const contentTriggers = ['pluginId', 'mainKey', 'subKey', 'lang'];\n    // Those only require to update the configuration options attribute\n    const optionsTriggers = ['placement', 'customClass'];\n    if (contentTriggers.some(prop => changes[prop])) {\n      this.buildPopoverConfig();\n    } else if (optionsTriggers.some(prop => changes[prop])) {\n      this.config = this.helpConfigService.updateOptions(this.config, this.placement, this.customClass);\n    }\n  }\n\n  getIconClasses(): string[] {\n    const classes = [];\n    if (this.iconCss) {\n      classes.push(this.iconCss);\n    }\n    // Set dark class\n    if (this.dark) {\n      classes.push('on-dark');\n    }\n    return classes;\n  }\n\n  private buildPopoverConfig(): void {\n    const placement = this.placement || this.DEFAULT_PLACEMENT;\n    this.helpConfigService.buildPopoverConfig(this.mainKey, this.subKey, this.pluginId, this.lang, placement, this.customClass)\n      .then((config: PopoverConfig) => {\n        this.config = config;\n      });\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Popover, PopoverConfig } from 'edc-popover-js';\n\n@Directive({ selector: '[edcHelpPopover]' })\nexport class HelpPopoverDirective implements OnChanges {\n\n  popoverInstance;\n\n  @Input() config: PopoverConfig;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.loadPopover();\n  }\n\n  private loadPopover(): void {\n    if (this.config && this.elementRef && this.elementRef.nativeElement) {\n      this.config.target = this.elementRef.nativeElement;\n      this.popoverInstance = new Popover(this.config);\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HelpComponent } from './help.component';\nimport { HelpService } from './help.service';\nimport { EdcTranslationService } from './translate/edc-translation.service';\nimport { HelpPopoverDirective } from './help-popover.directive';\nimport { HelpConfigService } from './config/help-config.service';\n\nimport 'edc-popover-js/dist/edc-popover.css';\n\nexport interface HelpModuleConfig {\n  configLoader: Provider;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    HelpComponent,\n    HelpPopoverDirective\n  ],\n  providers: [\n    HelpService,\n    EdcTranslationService,\n    HelpConfigService\n  ],\n  exports: [\n    HelpComponent\n  ],\n  entryComponents: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {\n  static forRoot(config: HelpModuleConfig): ModuleWithProviders<HelpModule> {\n    return {\n      ngModule: HelpModule,\n      providers: [\n        HelpService,\n        config.configLoader\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of edc-popover-ng\n */\n\nexport * from './lib/help.component';\nexport * from './lib/help.module';\nexport * from './lib/help.service';\nexport * from './lib/config/popover-configuration';\nexport * from './lib/config/popover-configuration-handler';\nexport * from './lib/translate/language-codes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {HelpConfigService as ɵa} from './lib/config/help-config.service';\nexport {HelpPopoverDirective as ɵc} from './lib/help-popover.directive';\nexport {EdcTranslationService as ɵb} from './lib/translate/edc-translation.service';"],"names":["EdcClient","Injectable","PopoverConfig","PopoverContent","PopoverOptions","Component","ViewEncapsulation","Input","Popover","Directive","ElementRef","NgModule","CommonModule"],"mappings":"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"}